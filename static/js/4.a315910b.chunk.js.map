{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Card","props","className","style","children","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","Fragment","onClear","margin","asOverlay","onSubmit","a","async","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.a315910b.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid ||false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        \"form-control--invalid\"}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n      case 'SET_DATA':\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Selecione uma imagem.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          SELECIONE UMA IMAGEM\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\" style={{margin: \"7rem auto\"}}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Nome\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Por favor insira um nome.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Por favor insira uma imagem.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Por favor insira um email válido.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Senha\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Por favor insira uma senha válida, pelo menos 5 caracteres.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          TROCAR PARA {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}